CREATE TABLE MERCHANT (
  MERCHANT_ID VARCHAR(255) NOT NULL,
  EMAIL VARCHAR(255) NOT NULL,
  NAME VARCHAR(255) NOT NULL,
  ADDRESS TEXT NOT NULL,
  PHONE VARCHAR(255) NOT NULL,
  PRIMARY KEY (MERCHANT_ID)
);

CREATE TABLE CUSTOMER (
  CUSTOMER_ID VARCHAR(255) NOT NULL,
  EMAIL VARCHAR(255) NOT NULL,
  NAME VARCHAR(255) NOT NULL,
  ADDRESS TEXT NOT NULL,
  PHONE VARCHAR(255) NOT NULL,
  PRIMARY KEY (CUSTOMER_ID)
);

CREATE TABLE PAYMENT (
  PAYMENT_ID VARCHAR(255) NOT NULL,
  URL VARCHAR(255) NOT NULL,
  STATUS VARCHAR(255) NOT NULL,
  PRIMARY KEY (PAYMENT_ID)
);

CREATE TABLE ORDERITEM (
  ORDERITEM_ID VARCHAR(255) NOT NULL,
  CUSTOMER_ID VARCHAR(255) NOT NULL,
  TOTALPRICE DECIMAL(10,2) NOT NULL,
  STATUS VARCHAR(25) NOT NULL,
  PAYMENT_ID VARCHAR(255),
  CREATED TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP NOT NULL,
  PRIMARY KEY (ORDERITEM_ID),
  FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER(CUSTOMER_ID) ON DELETE CASCADE ON UPDATE RESTRICT
);

CREATE TABLE PRODUCT (
  PRODUCT_ID VARCHAR(255) NOT NULL,
  TITLE VARCHAR(255) NOT NULL,
  DESCRIPTION TEXT NOT NULL,
  SELLINGPRICE DECIMAL(10,2) NOT NULL,
  DISCOUNTEDPRICE DECIMAL(10,2) NOT NULL,
  COSTPRICE DECIMAL(10,2) NOT NULL,
  CREATED TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP NOT NULL,
  PRIMARY KEY (PRODUCT_ID)
);

CREATE TABLE PRODUCT_QUANTITY (
  PRODUCT_ID VARCHAR(255) NOT NULL,
  QUANTITYAVAILABLE INTEGER,
  PRIMARY KEY (PRODUCT_ID, QUANTITYAVAILABLE),
  FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT(PRODUCT_ID) ON DELETE CASCADE ON UPDATE RESTRICT
);


CREATE TABLE PRODUCT_MERCHANT (
  PRODUCT_ID VARCHAR(255) NOT NULL,
  MERCHANT_ID VARCHAR(255) NOT NULL,
  PRIMARY KEY (PRODUCT_ID, MERCHANT_ID),
  FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT(PRODUCT_ID) ON DELETE CASCADE ON UPDATE RESTRICT,
  FOREIGN KEY (MERCHANT_ID) REFERENCES MERCHANT(MERCHANT_ID) ON DELETE CASCADE ON UPDATE RESTRICT
);

CREATE TABLE PRODUCT_ORDERITEM (
  PRODUCT_ID VARCHAR(255) NOT NULL,
  ORDERITEM_ID VARCHAR(255) NOT NULL,
  QUANTITY INTEGER NOT NULL,
  DISCOUNTED DECIMAL(10,2) NOT NULL,
  PRIMARY KEY (PRODUCT_ID, ORDERITEM_ID),
  FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT(PRODUCT_ID) ON DELETE CASCADE ON UPDATE RESTRICT,
  FOREIGN KEY (ORDERITEM_ID) REFERENCES ORDERITEM(ORDERITEM_ID) ON DELETE CASCADE ON UPDATE RESTRICT
);

CREATE TABLE PRODUCT_MEDIA (
  PRODUCT_ID VARCHAR(255) NOT NULL,
  FILENAME VARCHAR(255) NOT NULL,
  CREATED TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP NOT NULL,
  PRIMARY KEY (PRODUCT_ID, FILENAME),
  FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT(PRODUCT_ID) ON DELETE CASCADE ON UPDATE RESTRICT
);

CREATE TABLE PRODUCT_COLLECTION (
  PRODUCT_ID VARCHAR(255) NOT NULL,
  COLLECTION_ID VARCHAR(255) NOT NULL,
  PRIMARY KEY (PRODUCT_ID, COLLECTION_ID),
  FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT(PRODUCT_ID) ON DELETE CASCADE ON UPDATE RESTRICT
);


DELIMITER //

CREATE PROCEDURE ADD_PRODUCT(IN PID varchar(255),IN TIT varchar(255), IN DESCRIPT text, IN SP FLOAT, IN DP FLOAT, IN CP FLOAT, IN COLL varchar(255), IN QUAN INTEGER, IN MERC varchar(255))
BEGIN
	INSERT INTO PRODUCT(PRODUCT_ID,TITLE,DESCRIPTION,SELLINGPRICE,DISCOUNTEDPRICE,COSTPRICE) VALUES (PID,TIT,DESCRIPT,SP,DP,CP);
	INSERT INTO PRODUCT_COLLECTION(PRODUCT_ID,COLLECTION_ID) VALUES (PID,COLL);
    INSERT INTO PRODUCT_QUANTITY(PRODUCT_ID,QUANTITYAVAILABLE) VALUES (PID,QUAN);
    INSERT INTO PRODUCT_MERCHANT(PRODUCT_ID,MERCHANT_ID) VALUES (PID,MERC);
END //

DELIMITER ;


DELIMITER //

CREATE PROCEDURE EDIT_PRODUCT(IN PID varchar(255),IN TIT varchar(255), IN DESCRIPT text, IN SP FLOAT, IN DP FLOAT, IN CP FLOAT, IN COLL varchar(255), IN QUAN INTEGER, IN MERC varchar(255))
BEGIN
    UPDATE PRODUCT SET TITLE = TIT, DESCRIPTION = DESCRIPT, SELLINGPRICE = SP, DISCOUNTEDPRICE = DP, COSTPRICE = CP WHERE PRODUCT_ID = PID;
	UPDATE PRODUCT_COLLECTION SET COLLECTION_ID = COLL WHERE PRODUCT_ID = PID;
    UPDATE PRODUCT_QUANTITY SET QUANTITYAVAILABLE = QUAN WHERE PRODUCT_ID = PID;
END //

DELIMITER ;


DELIMITER //

CREATE PROCEDURE GET_PRODUCT()
BEGIN
    SELECT PRODUCT.PRODUCT_ID, PRODUCT.TITLE, PRODUCT.DESCRIPTION, PRODUCT_MEDIA.FILENAME, PRODUCT.SELLINGPRICE, PRODUCT.DISCOUNTEDPRICE, PRODUCT.COSTPRICE, PRODUCT_QUANTITY.QUANTITYAVAILABLE, PRODUCT_COLLECTION.COLLECTION_ID, PRODUCT_MERCHANT.MERCHANT_ID, PRODUCT.CREATED
    FROM ((((PRODUCT
    INNER JOIN PRODUCT_COLLECTION ON PRODUCT.PRODUCT_ID = PRODUCT_COLLECTION.PRODUCT_ID)
    INNER JOIN PRODUCT_MEDIA ON PRODUCT.PRODUCT_ID = PRODUCT_MEDIA.PRODUCT_ID)
    INNER JOIN PRODUCT_MERCHANT ON PRODUCT.PRODUCT_ID = PRODUCT_MERCHANT.PRODUCT_ID)
    INNER JOIN PRODUCT_QUANTITY ON PRODUCT.PRODUCT_ID = PRODUCT_QUANTITY.PRODUCT_ID);
END //

DELIMITER ;


DELIMITER //

CREATE PROCEDURE DELETE_MEDIA(IN PID varchar(255),IN FN varchar(255))
BEGIN
    DELETE FROM PRODUCT_MEDIA WHERE PRODUCT_ID = PID AND FILENAME = FN;
END //

DELIMITER ;


DELIMITER //

CREATE PROCEDURE GET_PRODUCT_FOR_PAYMENT(IN PID varchar(255))
BEGIN
    SELECT PRODUCT.PRODUCT_ID, PRODUCT.TITLE, PRODUCT_MEDIA.FILENAME, PRODUCT.DISCOUNTEDPRICE, PRODUCT_QUANTITY.QUANTITYAVAILABLE
    FROM ((PRODUCT
    INNER JOIN PRODUCT_MEDIA ON PRODUCT.PRODUCT_ID = PRODUCT_MEDIA.PRODUCT_ID)
    INNER JOIN PRODUCT_QUANTITY ON PRODUCT.PRODUCT_ID = PRODUCT_QUANTITY.PRODUCT_ID)
    WHERE PRODUCT.PRODUCT_ID = PID;
END //

DELIMITER ;

